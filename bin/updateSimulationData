#!/bin/bash

[ -z "$1" ] && USERNAME="atlcvmfs"

# Configuration scripts
[ -f "$PWD/.arelinstrc" ] && INSTCONF="$PWD/.arelinstrc"
[ -f "$HOME/.arelinstrc" ] && INSTCONF="$HOME/.arelinstrc"

if [ -s "$INSTCONF" ] ; then
    SDPATHS="`grep -i ^SimulationDataPath= $INSTCONF | cut -d= -f 2`"
    CHANGELOG="`grep -i ^ChangeLog= $INSTCONF | cut -d= -f 2`"
    USERNAME="`grep -i ^UserName= $INSTCONF | cut -d= -f 2`"
    SVNUSERNAME="`grep -i ^SvnUserName= $INSTCONF | cut -d= -f 2`"
    CVMFSTRANSACTION="`grep -i ^cvmfs_transaction= $INSTCONF | cut -d= -f 2`"
    CVMFSABORT="`grep -i ^cvmfs_abort= $INSTCONF | cut -d= -f 2`"
    CVMFSPUBLISH="`grep -i ^cvmfs_publish= $INSTCONF | cut -d= -f 2`"
    MAILTO="`grep -i ^MailTo= $INSTCONF | cut -d= -f 2`"
fi

TRANSACTION=/tmp/tmp.transaction.$$
CURRDIR="$PWD"
MAXFILES=500
UPSTREAM='@{u}'
rm -f ${TRANSACTION}*
rc=0
echo "Preparing transfer"
kinit -kt ${SVNUSERNAME}.keytab ${SVNUSERNAME}@CERN.CH
[ -z "$SDPATHS" ] && SDPATHS="/atlas-simulation-team/Geant4SetupConfigReference.git:/cvmfs/atlas.cern.ch/repo/sw/Simulation/Geant4SetupConfigReference"
SDPINDX=0
$HOME/bin/lock-install updateSimulationData
rc=$?
eval $CVMFSTRANSACTION
[ $rc -ne 0 ] && exit $rc
for SDPATH in `echo $SDPATHS | sed 's/,/ /g'`; do
  SDSRC="https://:@gitlab.cern.ch:8443`echo $SDPATH | cut -d: -f 1`"
  SDDST="`echo $SDPATH | cut -d: -f 2`"
  let SDPINDX=$SDPINDX+1
  echo "Syncing SimulationData [$SDPINDX] from $SDSRC to $SDDST"
  if [ ! -d `dirname $SDDST` ] ; then
      mkdir -p `dirname $SDDST`
      git clone $SDSRC $SDDST
      rc=$?
      [ $rc -eq 0 ] && touch ${SDDST}/.cvmfscatalog
  else
      cd $SDDST
      git fetch
      HEADREV=$(git rev-parse HEAD)
      LOCALREV=$(git rev-parse @{u})
      if [ $HEADREV != $LOCALREV ]; then
          git pull
          rc=$?
      else
          rc=10
      fi
  fi
  if [ $rc -eq 0 ] ; then
      TSTAMP="`date +%Y%m%d%H%M`"
      echo "	* + SimulationData $SDSRC $TSTAMP" >> $TRANSACTION
  fi
done

cd $CURRDIR

# Automatic Changelog
if [ -n "$CHANGELOG" -a -s "$TRANSACTION" ] ; then
    LOCKFILE=${CHANGELOG}.lock
    set -o noclobber
    echo "Locking the ChangeLog file"
    lock_retries=0
    max_lock_retries=360
    lock_retry_sleep=10
    while [ $lock_retries -lt $max_lock_retries ] ; do
        echo "ChangeLog lock" 2> /dev/null > ${LOCKFILE}
        lsr=$?
        if [ $lsr -ne 0 ] ; then
            echo "Cannot lock the ChangeLog file, waiting ${lock_retry_sleep}s"
            let lock_retries=$lock_retries+1
            sleep ${lock_retry_sleep}s
        else
            break
        fi
    done
    set +o noclobber
    if [ $lsr -ne 0 ] ; then
        echo "Cannot lock the tags file after $lock_retries retries"
    else
        if [ -f ${CHANGELOG} ] ; then
            mv ${CHANGELOG} ${CHANGELOG}.save
        else
            touch ${CHANGELOG}.save
        fi
        [ -s ${CHANGELOG}.save ] && echo >> $TRANSACTION
        echo "`date +'%Y-%m-%d %H:%M:%S'` $USERNAME" > ${CHANGELOG}.head
        cat ${CHANGELOG}.head $TRANSACTION ${CHANGELOG}.save > ${CHANGELOG}
        if [ $? -eq 0 ] ; then
            rm -f ${CHANGELOG}.head ${CHANGELOG}.save
            echo "Updating ChangeLog $CHANGELOG successful"
        else
            echo "Error writing the ChangeLog, restoring the old copy"
            rm -f ${CHANGELOG}
            mv ${CHANGELOG}.save ${CHANGELOG}
        fi
        echo "Unlocking the ChangeLog file"
        rm -f ${LOCKFILE}
    fi
fi

# Publish changes
if [ -s $TRANSACTION ] ; then
    if [ -n "$CVMFSPUBLISH" ] ; then
        $CVMFSPUBLISH
        if [ -n "$MAILTO" ] ; then
            echo "Sending notification"
            mail -s "[ATLAS CVMFS UPDATE] `hostname`" "$MAILTO" <<EOD
Dear admin,
the following releases have been installed in CVMFS @ `hostname`

`cat $TRANSACTION`

Regards,

     Your faithful installation agent
EOD
        fi
    fi
else
    [ -n "$CVMFSABORT" ] && $CVMFSABORT
fi

# Clear the install lock
$HOME/bin/unlock-install

# Cleanup
rm -f ${TRANSACTION}*

exit $rc
